{"version":3,"sources":["components/AddCategory.js","components/GifGriditem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","categoria","type","value","onChange","target","PropType","func","isRequired","GitGriditem","id","title","url","className","src","alt","getGits","category","a","encodeURI","fetch","resp","json","data","gits","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GitExpertApp","categories","categorie","ReactDOM","render","document","getElementById"],"mappings":"wOAGaA,EAAY,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAAiB,EACTC,mBAAS,cADA,mBACnCC,EADmC,KACxBC,EADwB,KAU1C,OACE,0BAAMC,SANW,SAACC,GAClBA,EAAEC,iBACFN,GAAc,SAAAO,GAAS,OAAGL,GAAH,mBAAiBK,OACxCJ,EAAc,MAIZ,4BAAKD,GACL,2BACEM,KAAK,OACLC,MAAOP,EACPQ,SAdkB,SAACL,GACvBF,EAAcE,EAAEM,OAAOF,YAmB3BV,EAAYa,SAAS,CACnBZ,c,OAAcY,EAASC,KAAKC,YCxBvB,IAAMC,EAAY,SAAC,GAAiB,EAAhBC,GAAiB,IAAdC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,IAElC,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPGK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,iDAC+BO,UAAUF,GADzC,+DAEHG,MAAMR,GAFH,cAEfS,EAFe,gBAGFA,EAAKC,OAHH,uBAGdC,EAHc,EAGdA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACLhB,GAAGgB,EAAIhB,GACPC,MAAMe,EAAIf,MACVC,IAAG,UAACc,EAAIC,cAAL,aAAC,EAAYC,iBAAiBhB,QAThB,kBAadY,GAbc,4CAAH,sDCIPK,EAAQ,SAAC,GAAc,IAAbZ,EAAY,EAAZA,SAAY,ECFR,SAACA,GAAY,IAAD,EACbtB,mBAAS,CAC7B4B,KAAK,GACLO,SAAQ,IAHyB,mBAC7BC,EAD6B,KACvBC,EADuB,KAiBpC,OAVCC,qBAAU,WACRjB,EAAQC,GACPiB,MAAK,SAAAC,GACJH,EAAS,CACPT,KAAOY,EACPL,SAAS,SAGb,IAEIC,EDbsBK,CAAanB,GAA/BU,EAFqB,EAE1BJ,KAAYO,EAFc,EAEdA,QAGnB,OACE,oCACA,4BAAKb,GACJa,GAAS,iDACV,yBAAKjB,UAAU,aAGXc,EAAOF,KAAI,SAACC,GACV,OAAO,kBAAC,EAAD,eACPW,IAAKX,EAAIhB,IACLgB,UEhBDY,EAAe,WAAO,IAAD,EACC3C,mBAAS,CAAC,cADX,mBACzB4C,EADyB,KACd7C,EADc,KAQhC,OACE,oCACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6CACA,6BAEA,4BAEI6C,EAAWd,KAAI,SAAAe,GAAS,OACtB,kBAAC,EAAD,CACEvB,SAAUuB,EACVH,IAAKG,UCjBjBC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.2d1db2a4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropType from 'prop-types';\r\n\r\nexport const AddCategory=({setCategories})=>{\r\n  const [inputValue,setinputValue]=useState('Hola mundo')\r\n  const handleInputChange=(e)=>{\r\n    setinputValue(e.target.value)\r\n  }\r\n  const handleSubmit=(e)=>{\r\n    e.preventDefault();    \r\n    setCategories(categoria=>[inputValue,...categoria])\r\n    setinputValue('')\r\n  }\r\n  return(\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>{inputValue}</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>     \r\n  )\r\n}\r\n\r\nAddCategory.PropType={\r\n  setCategories:PropType.func.isRequired\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport const GitGriditem=({id,title,url})=>{\r\n  \r\n  return(\r\n    <div className=\"card animate__animated animate__zoomIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}","export const getGits = async (category)=>{  \r\n  const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=J2HKAWkWu8OlknS24lpfpa5gvKJ0OEIO`;\r\n  const resp= await fetch(url)\r\n  const {data}=await resp.json();\r\n  \r\n  const gits=data.map(img=>{\r\n    return {\r\n      id:img.id,\r\n      title:img.title,\r\n      url:img.images?.downsized_medium.url\r\n    }\r\n  })\r\n  \r\n  return gits\r\n}","import React from 'react';\r\nimport { GitGriditem } from './GifGriditem';\r\n\r\nimport {useFetchGifs} from './../hooks/useFetchGifs'\r\nexport const GifGrid=({category})=>{\r\n  \r\n  const {data:images,loading} = useFetchGifs(category);\r\n  //console.log(data,loading);  \r\n  //GetGits();\r\n  return(\r\n    <>\r\n    <h3>{category}</h3>   \r\n    {loading&&<p>Cargando espera :D</p>}\r\n    <div className=\"card-grid\">\r\n         \r\n      {\r\n        images.map((img)=>{\r\n          return <GitGriditem\r\n          key={img.id}\r\n          {...img} />\r\n        })\r\n      }      \r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport {getGits} from './../helpers/getGifs'\r\nexport const useFetchGifs =(category)=>{\r\n   const [state,setstate]=useState({\r\n      data:[],\r\n      loading:true\r\n   });\r\n  \r\n    \r\n    useEffect(()=>{\r\n      getGits(category)\r\n      .then(imgs=>{\r\n        setstate({\r\n          data : imgs,\r\n          loading :false}\r\n        )\r\n      })\r\n    },[]);\r\n\r\n   return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid';\r\nexport const GitExpertApp = () => {\r\n  const [categories,setCategories]=useState(['One Punch']);\r\n\r\n  // const handleAdd=()=>{\r\n  //   setCategories(\r\n  //     categoria=>[...categoria,'Pokem√≥n']\r\n  //   )\r\n  // }\r\n  return(\r\n    <>\r\n    <AddCategory setCategories={setCategories}/>\r\n    <h2>GitExpertaApp</h2>\r\n    <hr/>\r\n    \r\n    <ul>\r\n      {\r\n        categories.map(categorie=>(\r\n          <GifGrid \r\n            category={categorie} \r\n            key={categorie}\r\n          />\r\n        ))\r\n      }\r\n    </ul>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GitExpertApp} from './GitExpertApp';\n\nReactDOM.render(\n    <GitExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}